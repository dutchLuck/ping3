#! /bin/bash
#
# C H E C K
#
# check last edited Thu Oct  5 14:22:54 2023
#
PROGRAM=ping3
TARGET=192.168.1.1
#
echo
echo "Operating System designation is $OSTYPE"
echo
#
if [[ "$OSTYPE" == "darwin"* ]] ; then
  PRIV=""
else
  PRIV="sudo"
fi
#
# Compare standard ICMP ECHO request pings
#
echo "Test standard ICMP ECHO request pings"
echo
#
echo "$PRIV ../$PROGRAM $TARGET"
$PRIV ../$PROGRAM  $TARGET
sleep 1
echo
#
echo "ping -c 3 $TARGET"
ping -c 3 $TARGET
sleep 1
echo
#
# Test the IPv4 Header Option Timestamp
# added to a standard ICMP ECHO request ping
# Compare output against standard OS system
# ping if on Linux system
#
echo "Test IPv4 Header Option Timestamps"
echo
#
echo "$PRIV ../$PROGRAM $TARGET -t0"
$PRIV ../$PROGRAM $TARGET -t0
sleep 1
echo
#
if [[ "$OSTYPE" == "linux-gnu" ]] ; then
  echo "ping -4 -c 2 -T tsonly $TARGET"
  ping -4 -c 2 -T tsonly $TARGET
  sleep 1
  echo
fi
#
echo "$PRIV ../$PROGRAM $TARGET -t1"
$PRIV ../$PROGRAM $TARGET -t1
sleep 1
echo
#
if [[ "$OSTYPE" == "linux-gnu" ]] ; then
  echo "ping -4 -c 2 -T tsandaddr $TARGET"
  ping -4 -c 2 -T tsandaddr $TARGET
  sleep 1
  echo
fi
#
echo "$PRIV ../$PROGRAM $TARGET -t3"
$PRIV ../$PROGRAM $TARGET -t3
sleep 1
echo
#
if [[ "$OSTYPE" == "linux-gnu" ]] ; then
  echo "ping -4 -c 2 -T tsprespec $TARGET $TARGET"
  ping -4 -c 2 -T tsprespec $TARGET $TARGET
  sleep 1
  echo
fi
#
# Test the ICMP TIMESTAMP option and
# compare to ping output if on macOS
#
echo "Test ICMP TIMESTAMP option"
echo
#
echo "$PRIV ../$PROGRAM $TARGET -T"
$PRIV ../$PROGRAM $TARGET -T
sleep 1
#
# On macOS the ping utility has the capability to send
# ICMP TIMESTAMP requests, but sudo is needed if the
# "-s 0" is left out of the command line
if [[ "$OSTYPE" == "darwin"* ]] ; then
  echo
  echo "ping -c 3 -M time -s 0 --apple-time $TARGET"
  ping -c 3 -M time -s 0 --apple-time $TARGET
fi
#
